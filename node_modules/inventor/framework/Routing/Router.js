/**
 * 路由处理器
 *
 * @author : sunkeysun
 */

import CoreRouter from 'koa-router'

import IClass from '../Support/Base/IClass'
import Route from './Route'
import Request from '../Http/Request'
import Response from '../Http/Response'

export default class Router extends IClass {
    _coreRouter = new CoreRouter()

    get(...args) {
        return this._handle.apply(this, args.unshift('get'))
    }

    post(...args) {
        return this._handle.apply(this, args.unshift('post'))
    }

    put(...args) {
        return this._handle.apply(this, args.unshift('put'))
    }

    delete(...args) {
        return this._handle.apply(this, args.unshift('delete'))
    }

    patch(...args) {
        return this._handle.apply(this, args.unshift('patch'))
    }

    resource(resourcePath, controllerName) {
        this._handle('get', `${resourcePath}`, `${controllerName}@index`)
        this._handle('get', `${resourcePath}/create`, `${controllerName}@create`)
        this._handle('post', `${resourcePath}`, `${controllerName}@store`)
        this._handle('get', `${resourcePath}/:id`, `${controllerName}@show`)
        this._handle('get', `${resourcePath}/:id/edit`, `${controllerName}@edit`)
        this._handle('patch', `${resourcePath}/:id`, `${controllerName}@update`)
        this._handle('delete', `${resourcePath}/:id`, `${controllerName}@destroy`)
    }

    group(prefix, handler) {
        if (!!prefix) {
            _.partial(handler, '')
        }
    }

    _handle(method, path, handler) {
        this._coreRouter[method](path, (ctx, next) => {
            const route = new Route(handler)
            const req = new Request(ctx.request)
            const res = new Response(ctx.response)
            route.handle(req, res, next)
        })
    }
}
